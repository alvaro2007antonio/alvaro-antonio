class Conta_bancaria:
    def __init__(self, titular, cpf, saldo=0):
        self.titular = titular
        self.cpf = cpf
        self.saldo = saldo


    def mostrar_conta(self):
        print(f"Titular: {self.titular}")
        print(f"CPF: {self.cpf}")
        print(f"Saldo: {self.saldo}")

    def depositar(self, quantia):
        if quantia > 0:
           self.saldo = self.saldo + quantia
           print(f"Depósito de {quantia} realizado com sucesso")
        
        else:
            print("O valor do depósito deve ser positivo")

    def sacar(self, quantia):
        if 0 < quantia <= self.saldo:
           self.saldo = self.saldo - quantia
           print(f"Saque de {quantia} realizado com sucesso")

        else:
            print("Valor de saque inválido ou saldo insuficiente")

    def verificar_saldo(self):
        print(f"Saldo atual: {self.saldo}")

######

class Conta_corrente(Conta_bancaria):
    def __init__(self, titular, cpf, numerocc, saldo=0):
        super().__init__(titular, cpf, saldo)
        self.numerocc = numerocc
     
    def mostrar_conta(self):
        super().mostrar_conta()
        print(f"Número da conta corrente: {self.numerocc}")
######

class Conta_poupança(Conta_bancaria):
    def __init__(self, titular, cpf, rendimento, saldo=0):
        super().__init__(titular, cpf, saldo)
        self.rendimento = rendimento
   
    def ver_rendimento(self):
        print(f"Rendimento atual: {self.rendimento}")

    def render(self):
        rendimento_quantia = self.saldo * (self.rendimento/100)
        self.saldo = self.saldo + rendimento_quantia
        print(f"Rendimento do {rendimento_quantia} aplicado. Saldo atualizado: {self.saldo}")

######

def menu():
    contas_correntes = []
    contas_poupancas = []

    while True:
        print("\n--- Sistema Bancário ---")
        print("1. Criar Conta Corrente")
        print("2. Criar Conta Poupança")
        print("3. Depositar")
        print("4. Sacar")
        print("5. Verificar Saldo")
        print("6. Verificar Rendimento (Poupança)")
        print("7. Aplicar Rendimento (Poupança)")
        print("8. Sair")

        escolha = input("Escolha uma opção: ")

        if escolha == '1':
            titular = input("Nome do Titular: ")
            cpf = input("CPF: ")
            numerocc = input("Número da Conta Corrente: ")
            saldo = float(input("Saldo inicial: "))
            conta = Conta_corrente(titular, cpf, numerocc, saldo)
            contas_correntes.append(conta)
            print("Conta Corrente criada com sucesso!")

        elif escolha == '2':
            titular = input("Nome do Titular: ")
            cpf = input("CPF: ")
            rendimento = float(input("Rendimento (%): "))
            saldo = float(input("Saldo inicial: "))
            conta = contas_poupancas(titular, cpf, rendimento, saldo)
            contas_poupancas.append(conta)
            print("Conta Poupança criada com sucesso!")

        elif escolha == '3':
            tipo_conta = input("Tipo de conta (1 para Corrente, 2 para Poupança): ")
            if tipo_conta == '1':
                numerocc = input("Número da Conta Corrente: ")
                conta = next((c for c in contas_correntes if c.numerocc == numerocc), None)
            else:
                cpf = input("CPF da Conta Poupança: ")
                conta = next((c for c in contas_poupancas if c.cpf == cpf), None)

            if conta:
                valor = float(input("Valor a depositar: "))
                conta.depositar(valor)
            else:
                print("Conta não encontrada.")

        elif escolha == '4':
            tipo_conta = input("Tipo de conta (1 para Corrente, 2 para Poupança): ")
            if tipo_conta == '1':
                numerocc = input("Número da Conta Corrente: ")
                conta = next((c for c in contas_correntes if c.numerocc == numerocc), None)
            else:
                cpf = input("CPF da Conta Poupança: ")
                conta = next((c for c in contas_poupancas if c.cpf == cpf), None)

            if conta:
                valor = float(input("Valor a sacar: "))
                conta.sacar(valor)
            else:
                print("Conta não encontrada.")

        elif escolha == '5':
            tipo_conta = input("Tipo de conta (1 para Corrente, 2 para Poupança): ")
            if tipo_conta == '1':
                numerocc = input("Número da Conta Corrente: ")
                conta = next((c for c in contas_correntes if c.numerocc == numerocc), None)
            else:
                cpf = input("CPF da Conta Poupança: ")
                conta = next((c for c in contas_poupancas if c.cpf == cpf), None)

            if conta:
                conta.verificar_saldo()
            else:
                print("Conta não encontrada.")

        elif escolha == '6':
            cpf = input("CPF da Conta Poupança: ")
            conta = next((c for c in contas_poupancas if c.cpf == cpf), None)

            if conta:
                conta.ver_rendimento()
            else:
                print("Conta não encontrada.")

        elif escolha == '7':
            cpf = input("CPF da Conta Poupança: ")
            conta = next((c for c in contas_poupancas if c.cpf == cpf), None)

            if conta:
                conta.render()
            else:
                print("Conta não encontrada.")

        elif escolha == '8':
            print("Saindo do sistema bancário.")
            break

        else:
            print("Opção inválida. Tente novamente.")


if __name__ == "__main__":
    menu()
